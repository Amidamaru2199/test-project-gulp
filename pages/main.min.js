"use strict";document.addEventListener("DOMContentLoaded",(function(){project.init()}));const project={init(){project.cartModule.init()},clickOutside(t,e){const i=s=>{t.contains(s.target)||(document.removeEventListener("click",i),e())};return document.addEventListener("click",i),i}};project.cartModule={items:[],init(){this.items=JSON.parse(localStorage.getItem("cartItems"))||[],project.cart.addElementsCart(this.items)},updateItem(t){const e=this.items.find(e=>e.id===t.id);e?e.quantity=t.quantity:this.items.push(t),this.saveInLocalStorageCart(),project.cart.addElementsCart(this.items)},saveInLocalStorageCart(){localStorage.setItem("cartItems",JSON.stringify(this.items))},clearCart(){this.items=[],localStorage.removeItem("cartItems"),project.cart.clear()},deleteItem(t){this.items=this.items.filter(e=>e.id!==t),this.saveInLocalStorageCart()}},project.cart={addElementsCart(t){const e=document.querySelector(".cart__items");e.innerHTML="",t.forEach(t=>{const i=document.createElement("div"),s=Number(t.price*t.quantity).toLocaleString();i.innerHTML=`\n                <img src="svg/close.svg" onclick="project.cart.deleteCard(${t.id})" alt="${t.title}" class="cart__item-del">\n                <img src="${t.poster}" alt="${t.title}" class="cart__item-poster">\n                <span class="cart__item-title">${t.title}</span>\n                <span class="cart__item-quantity">Количество: ${t.quantity}</span>\n                <span class="cart__item-summ">Сумма: ${s}</span>\n            `,i.classList.add("cart__item"),e.appendChild(i)})},clear(){document.querySelector(".cart__items").innerHTML=""},deleteCard(t){project.cartModule.deleteItem(t),this.addElementsCart(project.cartModule.items)}},project.popup={outListener:!1,open(t){this.removeListener();const e=document.querySelector("."+t).innerHTML,i=document.querySelector("._overlay");i.classList.add("open"),i.innerHTML=e,document.body.style.overflow="hidden",this.setEscEvent();const s=i.querySelector("._popup-content");setTimeout(()=>{this.outListener=project.clickOutside(s,()=>{this.close()})},10)},close(){document.querySelector("._overlay").classList.remove("open"),document.body.style.overflow="auto",this.removeListener()},removeListener(){this.outListener&&document.removeEventListener("click",this.outListener),this.outListener=!1},escEvent:!1,setEscEvent(){if(this.escEvent)return!1;document.onkeydown=t=>{27==(t=t||window.event).keyCode&&this.close()},this.escEvent=!0}},project.productCard={openDetailedPopup(t){const e=t.closest("._product-card"),i=Number(e.dataset.id),s=e.dataset.title,r=e.dataset.description,c=e.dataset.poster,o=Number(e.dataset.price);project.productDetailedModal.open(),project.productDetailedModal.setupData({id:i,title:s,description:r,poster:c,price:o})}},project.productDetailedModal={productId:null,quantity:1,price:0,modal:null,summEl:null,counter:null,setupData({id:t,title:e,description:i,poster:s,price:r}){this.modal=document.querySelector(".open .product-detail-popup"),this.summEl=this.modal.querySelector("._summ");const c=this.modal.querySelector("._title"),o=this.modal.querySelector("._description"),a=this.modal.querySelector("._poster"),n=this.modal.querySelector("._poster-alt"),d=this.modal.querySelector("._value"),u=project.cartModule.items.find(e=>e.id===t);this.productId=t,this.quantity=u?u.quantity:0,this.price=r,c.innerHTML=e,o.innerHTML=i,a.src=s,n.srcset=s,d.innerHTML=this.quantity,this.counter=d,this.setSumm(this.quantity*this.price),this.checkIsInCart()},setSumm(t){this.summEl.innerHTML=Number(t).toLocaleString()},checkIsInCart(){!!this.quantity?this.modal.classList.add("product-detail-popup_is-in-cart"):this.modal.classList.remove("product-detail-popup_is-in-cart")},open(){project.popup.open("_product-detailed-modal")},increaseQuantity(){this.quantity++,this.setSumm(this.price*this.quantity),this.counter.innerHTML=this.quantity,project.cartModule.updateItem({id:this.productId,quantity:this.quantity})},decreaseQuantity(){this.quantity>1?(this.quantity--,this.setSumm(this.price*this.quantity),this.counter.innerHTML=this.quantity,project.cartModule.updateItem({id:this.productId,quantity:this.quantity})):(project.cart.deleteCard(this.productId),this.quantity=0,this.checkIsInCart())},addToCart(){const t=this.productId,e=this.modal.querySelector("._title").innerHTML,i=this.modal.querySelector("._poster").src,s=this.quantity||1,r=this.price*this.quantity,c={id:t,title:e,poster:i,quantity:s,price:this.price,summ:r};project.cartModule.updateItem(c),this.quantity=s,this.checkIsInCart(),this.setSumm(this.quantity*this.price),this.counter.innerHTML=this.quantity}};